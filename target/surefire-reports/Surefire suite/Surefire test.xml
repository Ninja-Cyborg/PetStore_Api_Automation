<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="2" hostname="DESKTOP-GD0S75V" failures="4" tests="56" name="Surefire test" time="2.295" errors="0" timestamp="2023-05-18T15:51:38 GMT-07:00">
  <testcase classname="api.test.PetEndpointsTests" name="@BeforeClass setup" time="0.074">
    <failure type="java.util.MissingResourceException" message="Can&amp;apos;t find bundle for base name config, locale en_IN">
      <![CDATA[java.util.MissingResourceException: Can't find bundle for base name config, locale en_IN
at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
at api.utility.BaseClass.getProperties(BaseClass.java:41)
at api.utility.BaseClass.getStatusCode(BaseClass.java:46)
at api.test.PetEndpointsTests.setup(PetEndpointsTests.java:30)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setup -->
  <testcase classname="api.test.PetEndpointsTests" name="@AfterClass afterSuite" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterSuite -->
  <testcase classname="api.test.StoreEndpointsTests" name="@BeforeClass setup" time="0.006">
    <failure type="java.util.MissingResourceException" message="Can&amp;apos;t find bundle for base name config, locale en_IN">
      <![CDATA[java.util.MissingResourceException: Can't find bundle for base name config, locale en_IN
at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
at api.utility.BaseClass.getProperties(BaseClass.java:41)
at api.utility.BaseClass.getStatusCode(BaseClass.java:46)
at api.test.StoreEndpointsTests.setup(StoreEndpointsTests.java:29)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setup -->
  <testcase classname="api.test.StoreEndpointsTests" name="@AfterClass afterSuite" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterSuite -->
  <testcase classname="api.test.UserEndPointsTest" name="@BeforeClass setup" time="0.002">
    <failure type="java.util.MissingResourceException" message="Can&amp;apos;t find bundle for base name config, locale en_IN">
      <![CDATA[java.util.MissingResourceException: Can't find bundle for base name config, locale en_IN
at java.base/java.util.ResourceBundle.throwMissingResourceException(ResourceBundle.java:2045)
at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1683)
at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1586)
at java.base/java.util.ResourceBundle.getBundleImpl(ResourceBundle.java:1549)
at java.base/java.util.ResourceBundle.getBundle(ResourceBundle.java:858)
at api.utility.BaseClass.getProperties(BaseClass.java:41)
at api.utility.BaseClass.getStatusCode(BaseClass.java:46)
at api.test.UserEndPointsTest.setup(UserEndPointsTest.java:28)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass setup -->
  <testcase classname="api.test.UserEndPointsTest" name="@AfterClass afterSuite" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterSuite -->
  <testcase classname="api.test.PetEndpointsTests" name="testDeletePetById" time="0.0">
    <failure type="org.testng.TestNGException" message="
Cannot inject @Test annotated Method [testDeletePetById] with [int].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Cannot inject @Test annotated Method [testDeletePetById] with [int].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- testDeletePetById -->
  <testcase classname="api.test.PetEndpointsTests" name="testGetPetById" time="0.0">
    <failure type="org.testng.TestNGException" message="
Cannot inject @Test annotated Method [testGetPetById] with [int].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Cannot inject @Test annotated Method [testGetPetById] with [int].
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- testGetPetById -->
  <testcase classname="api.test.PetEndpointsTests" name="testUpdatePet" time="0.0">
    <skipped/>
  </testcase> <!-- testUpdatePet -->
  <testcase classname="api.test.PetEndpointsTests" name="testPostPet" time="0.0">
    <skipped/>
  </testcase> <!-- testPostPet -->
  <testcase classname="api.test.PetEndpointsTests" name="testPostPet" time="0.001">
    <skipped/>
  </testcase> <!-- testPostPet -->
  <testcase classname="api.test.PetEndpointsTests" name="testPostPet" time="0.0">
    <skipped/>
  </testcase> <!-- testPostPet -->
  <testcase classname="api.test.PetEndpointsTests" name="testPostPet" time="0.0">
    <skipped/>
  </testcase> <!-- testPostPet -->
  <testcase classname="api.test.PetEndpointsTests" name="testPostPet" time="0.001">
    <skipped/>
  </testcase> <!-- testPostPet -->
  <testcase classname="api.test.PetEndpointsTests" name="testPostPet" time="0.0">
    <skipped/>
  </testcase> <!-- testPostPet -->
  <testcase classname="api.test.PetEndpointsTests" name="testPostPet" time="0.0">
    <skipped/>
  </testcase> <!-- testPostPet -->
  <testcase classname="api.test.PetEndpointsTests" name="testPostPet" time="0.001">
    <skipped/>
  </testcase> <!-- testPostPet -->
  <testcase classname="api.test.PetEndpointsTests" name="testPostPet" time="0.0">
    <skipped/>
  </testcase> <!-- testPostPet -->
  <testcase classname="api.test.PetEndpointsTests" name="testPostPet" time="0.001">
    <skipped/>
  </testcase> <!-- testPostPet -->
  <testcase classname="api.test.StoreEndpointsTests" name="testGetStoreInventory" time="0.0">
    <skipped/>
  </testcase> <!-- testGetStoreInventory -->
  <testcase classname="api.test.StoreEndpointsTests" name="testCreateOrder" time="0.0">
    <skipped/>
  </testcase> <!-- testCreateOrder -->
  <testcase classname="api.test.StoreEndpointsTests" name="testCreateOrder" time="0.0">
    <skipped/>
  </testcase> <!-- testCreateOrder -->
  <testcase classname="api.test.StoreEndpointsTests" name="testCreateOrder" time="0.0">
    <skipped/>
  </testcase> <!-- testCreateOrder -->
  <testcase classname="api.test.StoreEndpointsTests" name="testCreateOrder" time="0.0">
    <skipped/>
  </testcase> <!-- testCreateOrder -->
  <testcase classname="api.test.StoreEndpointsTests" name="testCreateOrder" time="0.0">
    <skipped/>
  </testcase> <!-- testCreateOrder -->
  <testcase classname="api.test.StoreEndpointsTests" name="testCreateOrder" time="0.001">
    <skipped/>
  </testcase> <!-- testCreateOrder -->
  <testcase classname="api.test.StoreEndpointsTests" name="testCreateOrder" time="0.0">
    <skipped/>
  </testcase> <!-- testCreateOrder -->
  <testcase classname="api.test.StoreEndpointsTests" name="testCreateOrder" time="0.0">
    <skipped/>
  </testcase> <!-- testCreateOrder -->
  <testcase classname="api.test.StoreEndpointsTests" name="testCreateOrder" time="0.0">
    <skipped/>
  </testcase> <!-- testCreateOrder -->
  <testcase classname="api.test.StoreEndpointsTests" name="testCreateOrder" time="0.001">
    <skipped/>
  </testcase> <!-- testCreateOrder -->
  <testcase classname="api.test.StoreEndpointsTests" name="testGetOrderById" time="0.0">
    <failure type="org.testng.TestNGException" message="
Method public void api.test.StoreEndpointsTests.testGetOrderById(int) requires a @DataProvider named : orderId in class api.utility.Staticprovider">
      <![CDATA[org.testng.TestNGException: 
Method public void api.test.StoreEndpointsTests.testGetOrderById(int) requires a @DataProvider named : orderId in class api.utility.Staticprovider
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- testGetOrderById -->
  <testcase classname="api.test.StoreEndpointsTests" name="testDeleteOrderById" time="0.0">
    <failure type="org.testng.TestNGException" message="
Method public void api.test.StoreEndpointsTests.testDeleteOrderById(int) requires a @DataProvider named : orderId in class api.utility.Staticprovider">
      <![CDATA[org.testng.TestNGException: 
Method public void api.test.StoreEndpointsTests.testDeleteOrderById(int) requires a @DataProvider named : orderId in class api.utility.Staticprovider
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- testDeleteOrderById -->
  <testcase classname="api.test.UserEndPointsTest" name="testPostUser" time="0.0">
    <skipped/>
  </testcase> <!-- testPostUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testPostUser" time="0.0">
    <skipped/>
  </testcase> <!-- testPostUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testPostUser" time="0.0">
    <skipped/>
  </testcase> <!-- testPostUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testPostUser" time="0.0">
    <skipped/>
  </testcase> <!-- testPostUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testPostUser" time="0.0">
    <skipped/>
  </testcase> <!-- testPostUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testPostUser" time="0.0">
    <skipped/>
  </testcase> <!-- testPostUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testPostUser" time="0.0">
    <skipped/>
  </testcase> <!-- testPostUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testPostUser" time="0.0">
    <skipped/>
  </testcase> <!-- testPostUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testPostUser" time="0.0">
    <skipped/>
  </testcase> <!-- testPostUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testPostUser" time="0.0">
    <skipped/>
  </testcase> <!-- testPostUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testGetUser" time="0.0">
    <skipped/>
  </testcase> <!-- testGetUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testGetUser" time="0.0">
    <skipped/>
  </testcase> <!-- testGetUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testGetUser" time="0.0">
    <skipped/>
  </testcase> <!-- testGetUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testGetUser" time="0.0">
    <skipped/>
  </testcase> <!-- testGetUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testGetUser" time="0.0">
    <skipped/>
  </testcase> <!-- testGetUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testGetUser" time="0.001">
    <skipped/>
  </testcase> <!-- testGetUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testGetUser" time="0.0">
    <skipped/>
  </testcase> <!-- testGetUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testGetUser" time="0.001">
    <skipped/>
  </testcase> <!-- testGetUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testGetUser" time="0.0">
    <skipped/>
  </testcase> <!-- testGetUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testGetUser" time="0.0">
    <skipped/>
  </testcase> <!-- testGetUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testDeleteUser" time="0.0">
    <skipped/>
  </testcase> <!-- testDeleteUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testDeleteUser" time="0.0">
    <skipped/>
  </testcase> <!-- testDeleteUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testDeleteUser" time="0.0">
    <skipped/>
  </testcase> <!-- testDeleteUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testDeleteUser" time="0.001">
    <skipped/>
  </testcase> <!-- testDeleteUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testDeleteUser" time="0.0">
    <skipped/>
  </testcase> <!-- testDeleteUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testDeleteUser" time="0.001">
    <skipped/>
  </testcase> <!-- testDeleteUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testDeleteUser" time="0.0">
    <skipped/>
  </testcase> <!-- testDeleteUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testDeleteUser" time="0.0">
    <skipped/>
  </testcase> <!-- testDeleteUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testDeleteUser" time="0.001">
    <skipped/>
  </testcase> <!-- testDeleteUser -->
  <testcase classname="api.test.UserEndPointsTest" name="testDeleteUser" time="0.0">
    <skipped/>
  </testcase> <!-- testDeleteUser -->
  <testcase classname="api.utility.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
  <testcase classname="api.utility.BaseClass" name="@BeforeSuite loadConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite loadConfig -->
</testsuite> <!-- Surefire test -->
